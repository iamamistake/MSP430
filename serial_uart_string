#include <msp430.h>
#define PUSH_BUTTON BIT3
char hehe []= "f";
char value [5];
int i = 0;
volatile int j=0;

void serial_transmit (char *str);

void main (void) {
     WDTCTL = WDTPW | WDTHOLD; // disabling the watchdog timer

    BCSCTL1 = CALBC1_1MHZ;
    DCOCTL = CALDCO_1MHZ; // setting the clock rate to 1MHz

    P1IE |= PUSH_BUTTON;
    P1IES |= PUSH_BUTTON;
    P1IFG &= ~PUSH_BUTTON;
    _enable_interrupts();

    P1SEL = BIT1 | BIT2;
    P1SEL2 = BIT1 | BIT2;
    UCA0CTL1 |= UCSWRST + UCSSEL_2;

    UCA0BR0 = 52;
    UCA0BR1 = 0;
    UCA0MCTL |= UCBRS_0;

//     Setting BR=19200 with UCOS16=1 (Oversampling enabled)
//    UCA0BR0 = 3;
//    UCA0BR1 = 0;
//    UCA0MCTL = 0x41;



    UCA0CTL1 &= ~UCSWRST;
    IE2 |= UCA0RXIE;

    while (1);
}

//void serial_transmit (char *str) {
//    while (*str != 0) {
//        while (!(IFG2 & UCA0TXIFG));
//        UCA0TXBUF = *str++;
//    }
//}

#pragma vector=PORT1_VECTOR
__interrupt void PORT1_ISR (void) {
//        while (*value != 0) {
//            while (!(IFG2 & UCA0TXIFG));
//            UCA0TXBUF = *value;
//            value = value +1;

        while (value [j] != 0) {
            while (!(IFG2 & UCA0TXIFG));
            UCA0TXBUF = value [j];
            j++;
        }
    j=0;
    P1IFG &= ~PUSH_BUTTON;
}

#pragma vector=USCIAB0RX_VECTOR
__interrupt void USCIAB0RX_ISR (void) {
    *(value + i) = UCA0RXBUF;
    if (*(value + i) != 0)
        i++;
    else
        i=0;

//    IFG2 &= ~UCA0RXIFG;
}
