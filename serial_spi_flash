#include <msp430.h>
#define PUSH_BUTTON BIT3
char value [] = "h";
int i = 0;
volatile int j=0;

void serial_transmit (char *str);

void main (void) {
     WDTCTL = WDTPW | WDTHOLD; // disabling the watchdog timer

    BCSCTL1 = CALBC1_1MHZ;
    DCOCTL = CALDCO_1MHZ; // setting the clock rate to 1MHz

    P1IE |= PUSH_BUTTON;
    P1IES |= PUSH_BUTTON;
    P1IFG &= ~PUSH_BUTTON;
    _enable_interrupts();


    P1SEL = BIT6 | BIT7 | BIT5;
    P1SEL2 = BIT6 | BIT7 | BIT5;
    UCB0CTL1 |= UCSWRST + UCSSEL_2;
    UCB0CTL0 |= UCMST + UCSYNC;
    UCB0BR0 = 10;
    UCB0CTL1 &= ~UCSWRST;

    IE2 |= UCB0RXIE;
//    IE2 |= UCB0TXIE;

    while (1);
}

void serial_transmit (char *str) {
    while (*str != 0) {
        while (!(IFG2 & UCB0TXIFG));
        UCB0TXBUF = *str++;
    }
}

#pragma vector=PORT1_VECTOR
__interrupt void PORT1_ISR (void) {
    serial_transmit("h");
//        while (*value != 0) {
//            while (!(IFG2 & UCB0TXIFG));
//            UCB0TXBUF = *value;
//            value = value +1;

//        while (value [j] != 0) {
//            while (!(IFG2 & UCB0TXIFG));
//            UCB0TXBUF = value [j];
//            j++;
//        }
//    j=0;
    P1IFG &= ~PUSH_BUTTON;
}

#pragma vector=USCIAB0RX_VECTOR
__interrupt void USCIAB0RX_ISR (void) {
    *(value + i) = UCB0RXBUF;
    if (*(value + i) != 0)
        i++;
    else
        i=0;

//    IFG2 &= ~UCB0RXIFG;
}
